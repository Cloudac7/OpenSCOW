syntax = "proto3";

package scow.audit;

message SshSession {
  string user = 2;
  string remote_addr = 3;
  int32 is_finished = 4;
  optional string node = 5;
  optional string date_start = 6;
  optional string date_end = 7;
  optional int32 is_success = 8;
  optional int32  has_reply = 9;
}

message CommandInfo {
  string user = 1;
  string node = 2;
  string input = 3;
  string output = 4;
  string session = 5;
  string time = 6;
  string remote_addr = 8;
  string asset_ip = 9;
}


message GetSessionsRequest {

}

message GetSessionsResponse {
  repeated SshSession results = 1;
}

message CreateSessionRequest {
  SshSession session = 1;
}

message CreateSessionResponse {
}

message CreateCommandsRequest {
  repeated CommandInfo commands = 1;
}

message CreateCommandsResponse {

}

message GetCommandsRequest {

}

message GetCommandsResponse {
  repeated CommandInfo results = 1;

}

message WriteTerminalMsgRequest {
  string message = 1;
  string cluster = 2;
  string node = 3;
  string user = 4;
  string session = 5;
  string time = 6;
}

message WriteTerminalMsgResponse {

}

message WriteAppProxyRequest {
  string user = 1;
  string target = 2;
}

message WriteAppProxyResponse {

}

service AuditService {
  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse);
  rpc GetSessions(GetSessionsRequest) returns (GetSessionsResponse);

  rpc CreateCommands(CreateCommandsRequest) returns (CreateCommandsResponse);
  rpc GetCommands(GetCommandsRequest) returns (GetCommandsResponse);

  rpc WriteTerminalMsg(WriteTerminalMsgRequest) returns (WriteTerminalMsgResponse);

  rpc WriteAppProxy(WriteAppProxyRequest) returns (WriteAppProxyResponse);


}
