/**
 * Copyright (c) 2022 Peking University and Peking University Institute for Computing and Digital Economy
 * SCOW is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *          http://license.coscl.org.cn/MulanPSL2
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 */

syntax = "proto3";

package resource;


message GetAccountsAssignedClustersRequest {
    repeated string account_names = 1;
    string tenant_name = 2;
}

message GetAccountsAssignedClustersResponse {
    repeated string cluster_ids = 1;
}

message GetAccountAssignedClusterPartitionsRequest {
    string account_name = 1;
    string tenant_name = 2;
    optional string cluster_id = 3;
}

message AssignedClusterParition {
    string cluster_id = 1;
    string partition = 2;
}
message AssignedClusterParitions {
    repeated AssignedClusterParition assigned_info = 1;
}

message GetAccountAssignedClusterPartitionsResponse {
    map<string, AssignedClusterParitions> assigned_cluster_partitions = 1;
}

message GetAccountDefaultClusterPartitionsRequest {
    string tenant_name = 1;
    optional string cluster = 2;
}

message GetAccountDefaultClusterPartitionsResponse {
    map<string, AssignedClusterParitions> assigned_cluster_partitions = 1;
}

service ClusterPartitionService {
    rpc GetAccountsAssignedClusters(GetAccountsAssignedClustersRequest) returns (GetAccountsAssignedClustersResponse) {}
    rpc GetAccountAssignedClusterPartitions(GetAccountAssignedClusterPartitionsRequest) returns (GetAccountAssignedClusterPartitionsResponse) {}
    rpc GetAccountDefaultClusterPartitions(GetAccountDefaultClusterPartitionsRequest) returns (GetAccountDefaultClusterPartitionsResponse) {}
}
